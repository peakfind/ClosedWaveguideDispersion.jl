"""
    calc_diagram(cv::CellValues, dh::DofHandler, cst::ConstraintHandler, A::SparseMatrixCSC, B::SparseMatrixCSC, n::Function, bz; nevs::Int=6)

Compute the dispersion diagram for a 2D periodic closed waveguide. The propagation of the 
wave in this waveguide is described by

``\\Delta u + k^2 n(x_{1}, x_{2})u = 0.``

To get the dispersion diagram, We need to solve generalized linear eigenvalue problems 
parametered by ``\\alpha`` in the Brillouin zone `bz` which are derived by Finite element 
method. The generalized linear eigenvalue problems come from 

``\\int \\nabla u \\cdot \\nabla \\bar{v} - 2i \\alpha \\partial_{1} u \\bar{v} + \\alpha^{2} u \\bar{v} dx = k^{2} \\int n(x_{2}, x_{2}) u \\bar{v} dx.``

# Arguments

- `cv`: CellValues 
- `dh`: DofHandler
- `cst`: ConstraintHandler
- `A`: matrix ``\\mathbf{A}`` generated by [`assemble_A`](@ref)
- `B`: matrix ``\\mathbf{B}`` generated by [`assemble_B`](@ref)
- `n`: refractive index which describe the property of the medium
- `bz`: discrete Brillouin zone
- `nevs`: the number of eigenvalues
"""
function calc_diagram(cv::CellValues, dh::DofHandler, cst::ConstraintHandler, A::SparseMatrixCSC, B::SparseMatrixCSC, n::Function, bz; nevs::Int=6)
    m = length(bz)
    μ = zeros(m, nevs)
    
    # Assemble the matrix B, since B is independent of α
    B = assemble_B(cv, dh, B, n)
    
    # Impose the boundary conditions
    apply!(B, cst)
    
    # Assemble the matrix A at different α in bz
    for (i, α) in enumerate(bz) 
        # Assemble A at α 
        A = assemble_A(cv, dh, A, α)

        # Impose the boundary conditions
        apply!(A, cst)
        
        # Solve the generalized eigenvalue problem by Arpack.jl
        λ, _ = eigs(A, B, nev=nevs, which=:SR) 
        λ = real(λ)
        μ[i, :] = λ
        
        # Reset A to 0.0 + 0.0im
        fill!(A, 0.0 + 0.0im)
    end
    
    return μ
end