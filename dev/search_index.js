var documenterSearchIndex = {"docs":
[{"location":"pa3/#PA-Three","page":"PA-Three","title":"PA-Three","text":"","category":"section"},{"location":"pa3/#Problem","page":"PA-Three","title":"Problem","text":"","category":"section"},{"location":"pa3/","page":"PA-Three","title":"PA-Three","text":"PA-Three is an example in [4]","category":"page"},{"location":"pa3/","page":"PA-Three","title":"PA-Three","text":"q(x_1 x_2) = 1 + 05 cos(2pi x_1) sin(2pi x_2)\nNeumann boundary condition on partial Omega","category":"page"},{"location":"pa3/#Code","page":"PA-Three","title":"Code","text":"","category":"section"},{"location":"pa3/","page":"PA-Three","title":"PA-Three","text":"Load the necessary packages","category":"page"},{"location":"pa3/","page":"PA-Three","title":"PA-Three","text":"using Ferrite: Lagrange, RefTriangle\nusing ClosedWaveguideDispersion","category":"page"},{"location":"pa3/","page":"PA-Three","title":"PA-Three","text":"In this example, we only need to define a new refractive index.","category":"page"},{"location":"pa3/","page":"PA-Three","title":"PA-Three","text":"function n(x)\n    return 1.0 + 0.5 * cos(2π * x[1]) * sin(2π * x[2])\nend;\np = 1.0;\nh = 1.0;\nN = 150;\n\n# Set up the grid\ngrid = setup_grid(lc=0.05, period=p, height=h)\n\n# Define the interpolation\nip = Lagrange{RefTriangle, 1}()\n\n# Set up the FE values: CellValues\ncv = setup_fevs(ip)\n\n# Set up the DofHandler\ndh = setup_dofs(grid, ip)\n\n# Set the boundary conditions\ncst = setup_bdcs(dh, period=p)\n\n# Allocate the matrices\nA = allocate_matries(dh, cst)\nB = allocate_matries(dh, cst)\n\n# Discretize the Brillouin zone\nbz = collect(range(-π/p, 2π/p, N))\n\n# Calculate the dispersion diagram\nμ = calc_diagram(cv, dh, cst, A, B, n, bz, nevs=6)\n\n# Plot the dispersion diagram\nplot_diagram(bz, μ, period=p)","category":"page"},{"location":"pa3/","page":"PA-Three","title":"PA-Three","text":"","category":"page"},{"location":"pa3/","page":"PA-Three","title":"PA-Three","text":"This page was generated using Literate.jl.","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/#ClosedWaveguideDispersion.allocate_matries-Tuple{Ferrite.DofHandler, Ferrite.ConstraintHandler}","page":"API","title":"ClosedWaveguideDispersion.allocate_matries","text":"allocate_matries(dh::DofHandler, cst::ConstraintHandler)\n\nCreate a sparsity pattern by DofHandler dh and ConstraintHandler cst.\n\n\n\n\n\n","category":"method"},{"location":"api/#ClosedWaveguideDispersion.assemble_A-Tuple{Ferrite.CellValues, Ferrite.DofHandler, SparseArrays.SparseMatrixCSC, Float64}","page":"API","title":"ClosedWaveguideDispersion.assemble_A","text":"assemble_A(cv::CellValues, dh::DofHandler, A::SparseMatrixCSC, α::Float64)\n\nAssemble the matrix mathbfA which is given by the sesquilinear form \n\nint nabla u cdot nabla barv - 2i alpha partial_1 u barv + alpha^2 u barv dx\n\n\n\n\n\n","category":"method"},{"location":"api/#ClosedWaveguideDispersion.assemble_B-Tuple{Ferrite.CellValues, Ferrite.DofHandler, SparseArrays.SparseMatrixCSC, Function}","page":"API","title":"ClosedWaveguideDispersion.assemble_B","text":"assemble_B(cv::CellValues, dh::DofHandler, B::SparseMatrixCSC, n::Function)\n\nAssemble the matrix mathbfB which is given by the sesquilinear form \n\nint n(x_2 x_2) u barv dx\n\n\n\n\n\n","category":"method"},{"location":"api/#ClosedWaveguideDispersion.calc_diagram-Tuple{Ferrite.CellValues, Ferrite.DofHandler, Ferrite.ConstraintHandler, SparseArrays.SparseMatrixCSC, SparseArrays.SparseMatrixCSC, Function, Any}","page":"API","title":"ClosedWaveguideDispersion.calc_diagram","text":"calc_diagram(cv::CellValues, dh::DofHandler, cst::ConstraintHandler, A::SparseMatrixCSC, B::SparseMatrixCSC, n::Function, bz; nevs::Int=6)\n\nCompute the dispersion diagram for a 2D periodic closed waveguide. The propagation of the  wave in this waveguide is described by\n\nDelta u + k^2 n(x_1 x_2)u = 0\n\nTo get the dispersion diagram, We need to solve generalized linear eigenvalue problems  parametered by alpha in the Brillouin zone bz which are derived by Finite element  method. The generalized linear eigenvalue problems come from \n\nint nabla u cdot nabla barv - 2i alpha partial_1 u barv + alpha^2 u barv dx = k^2 int n(x_2 x_2) u barv dx\n\nArguments\n\ncv: CellValues \ndh: DofHandler\ncst: ConstraintHandler\nA: matrix mathbfA generated by assemble_A\nB: matrix mathbfB generated by assemble_B\nn: refractive index which describe the property of the medium\nbz: discrete Brillouin zone\nnevs: the number of eigenvalues\n\n\n\n\n\n","category":"method"},{"location":"api/#ClosedWaveguideDispersion.plot_diagram-Tuple{Any, Any}","page":"API","title":"ClosedWaveguideDispersion.plot_diagram","text":"plot_diagram(bz, μ;period=1.0, title=\"Dispersion Diagram\", xlabel=\"Brillouin zone\")\n\nPlot the disperison diagram.\n\nArguments\n\nbz: discrete Brillouin zone \nμ: eigenvalues with respect to alpha in bz\nperiod: period of the closed waveguide in the horizontal direction\n\n\n\n\n\n","category":"method"},{"location":"api/#ClosedWaveguideDispersion.setup_bdcs-Tuple{Ferrite.DofHandler}","page":"API","title":"ClosedWaveguideDispersion.setup_bdcs","text":"setup_bdcs(dh::DofHandler; period=1.0)\n\nImpose the periodic boundary condition in the horizontal direction.\n\nArguments\n\ndh: DofHandler\nperiod: the period of the closed waveguide in the horizontal direction.\n\n\n\n\n\n","category":"method"},{"location":"api/#ClosedWaveguideDispersion.setup_dofs-Tuple{Ferrite.Grid, Any}","page":"API","title":"ClosedWaveguideDispersion.setup_dofs","text":"setup_dofs(grid::Grid, ip)\n\nDefine the DofHandler according to the mesh grid and the interpolation ip.\n\n\n\n\n\n","category":"method"},{"location":"api/#ClosedWaveguideDispersion.setup_fevs-Tuple{Any}","page":"API","title":"ClosedWaveguideDispersion.setup_fevs","text":"setup_fevs(ip)\n\nSet up the quadreture rule and CellValues (for the integral on domain). Here we only consider 2D problem.\n\nArguments\n\nip: the interpolation\n\n\n\n\n\n","category":"method"},{"location":"api/#ClosedWaveguideDispersion.setup_grid-Tuple{}","page":"API","title":"ClosedWaveguideDispersion.setup_grid","text":"setup_grid(;lc=0.05, period=1.0, height=1.0)\n\nGenerate the mesh for the periodic cell by using Gmsh.\n\nArguments\n\nlc: the mesh size\nperiod: the period of the periodic closed waveguide\nheight: the height of the periodic closed waveguide\n\n\n\n\n\n","category":"method"},{"location":"homogeneous/#tutorial-homogeneous-neumann","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"","category":"section"},{"location":"homogeneous/#Problem","page":"Homogeneous case with Neumann boundary condition","title":"Problem","text":"","category":"section"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"This problem in given as an example in [3]. We conclude the assumptions in the below list:","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"The function q(x_1 x_2) = 1 is a constant function.\nhomogeneous Neumann boundary condition on partial Omega.","category":"page"},{"location":"homogeneous/#Code","page":"Homogeneous case with Neumann boundary condition","title":"Code","text":"","category":"section"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"First we should load ClosedWaveguideDispersion.jl for implemented functions. We also need Ferrite.jl to define the interpolation.","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"using ClosedWaveguideDispersion\nusing Ferrite: Lagrange, RefTriangle","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"Since we consider the homogeneous waveguide, we need to define the refraction index.","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"# Refractive index\nfunction n(x)\n   return 1.0 \nend;","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"Next, we specify the parameters related to the periodic cell and the discrete Brillouin zone.","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"# Period of the waveguide\np = 1.0;\n# Height of the waveguide\nh = 1.0;\n# Number of points in the discrete Brillouin zone\nN = 100;","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"We use setup_grid to generate mesh for the periodic cell with period p and height h.","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"# Set up the grid \ngrid = setup_grid(lc=0.05, period=p, height=h)","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"Then we need to define the interpolation, CellValues and DofHandler which are needed by Ferrite.jl. For more details about solving PDEs by Ferrite.jl, we refer to the documentation for Ferrite.jl.","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"# Define the interpolation \nip = Lagrange{RefTriangle, 1}()\n\n# Set up the FE values: CellValues \ncv = setup_fevs(ip)\n\n# Set up the DofHandler \ndh = setup_dofs(grid, ip);","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"In this example, the Neumann boundary condition is satisfied naturally. So we only need to impose the periodic boundary condition in setup_bdcs.","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"# Set the boundary conditions\ncst = setup_bdcs(dh, period=p)","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"Now we should prepare for the assembly of the eigenvalue problem.","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"# Allocate the matrices\nA = allocate_matries(dh, cst)\nB = allocate_matries(dh, cst)\n\n# Discretize the Brillouin zone\nbz = collect(range(-π/p, π/p, N))","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"In calc_diagram, B is generated only one time and A is generated with respect to alpha in bz. Then we solve the generalized linear eigenvalue problem Ax = mu Bx at each alpha.","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"# Calculate the dispersion diagram\nμ = calc_diagram(cv, dh, cst, A, B, n, bz, nevs=7)","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"Finally, we can plot our dispersion diagram.:","category":"page"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"# Plot the dispersion diagram\nplot_diagram(bz, μ, period=p)","category":"page"},{"location":"homogeneous/#Plain-code","page":"Homogeneous case with Neumann boundary condition","title":"Plain code","text":"","category":"section"},{"location":"homogeneous/","page":"Homogeneous case with Neumann boundary condition","title":"Homogeneous case with Neumann boundary condition","text":"using ClosedWaveguideDispersion\nusing Ferrite: Lagrange, RefTriangle\n\n# Parameters\nfunction n(x)\n   return 1.0 \nend\n\np = 1.0\nh = 1.0\nN = 100\n\n# Set up the grid \ngrid = setup_grid(lc=0.05, period=p, height=h)\n\n# Define the interpolation \nip = Lagrange{RefTriangle, 1}()\n\n# Set up the FE values: CellValues \ncv = setup_fevs(ip)\n\n# Set up the DofHandler \ndh = setup_dofs(grid, ip)\n\n# Set the boundary conditions\ncst = setup_bdcs(dh, period=p)\n\n# Allocate the matrices\nA = allocate_matries(dh, cst)\nB = allocate_matries(dh, cst)\n\n# Discretize the Brillouin zone\nbz = collect(range(-π/p, π/p, N))\n\n# Calculate the dispersion diagram\nμ = calc_diagram(cv, dh, cst, A, B, n, bz, nevs=7)\n\n# Plot the dispersion diagram\nplot_diagram(bz, μ, period=p)","category":"page"},{"location":"references/#References","page":"References","title":"References","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"S. Fliss and P. Joly. Solutions of the time-harmonic wave equation in periodic               waveguides: asymptotic behaviour and radiation condition. Arch. Ration. Mech. Anal. 219, 349–386 (2016).\n\n\n\nW. Dörfler, A. Lechleiter, M. Plum, G. Schneider and C. Wieners. Photonic crystals: Mathematical analysis and numerical approximation. Vol. 42 (Springer Science & Business Media, 2011).\n\n\n\nR. Zhang. Numerical methods for scattering problems in periodic               waveguides. Numer. Math. 148, 959–996 (2021).\n\n\n\nM. Ehrhardt, J. Sun and C. Zheng. Evaluation of scattering operators for semi-infinite periodic               arrays. Commun. Math. Sci. 7, 347–364 (2009).\n\n\n\n","category":"page"},{"location":"pa2/#PA-Two","page":"PA-Two","title":"PA-Two","text":"","category":"section"},{"location":"pa2/#Problem","page":"PA-Two","title":"Problem","text":"","category":"section"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"PA-Two is an example in [4] and satisfies the following conditions:","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"a rectangular hole of size 05 times 05 in the cell center;\nNeumann boundary condition on partial Omega;\nhomogeneous Dirichlet boundary condition at the hole boundary.","category":"page"},{"location":"pa2/#Code","page":"PA-Two","title":"Code","text":"","category":"section"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"For this example, we also need to load Gmsh and FerriteGmsh to generate the mesh","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"using Gmsh\nusing Ferrite\nusing FerriteGmsh\nusing ClosedWaveguideDispersion","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"We need to customize our mesh and boundary conditions.","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"function my_grid(;lc=0.05, period=1.0, height=1.0, holewidth=0.5, holeheight=0.5)\n    # Initialize gmsh\n    gmsh.initialize()\n    gmsh.option.setNumber(\"General.Verbosity\", 2)\n\n    # Add the points\n    p1 = gmsh.model.geo.addPoint(-period/2, 0, 0, lc)\n    p2 = gmsh.model.geo.addPoint(period/2, 0, 0, lc)\n    p3 = gmsh.model.geo.addPoint(period/2, height, 0, lc)\n    p4 = gmsh.model.geo.addPoint(-period/2, height, 0, lc)\n    p5 = gmsh.model.geo.addPoint(-holewidth/2, (height - holeheight)/2, 0, lc)\n    p6 = gmsh.model.geo.addPoint(holewidth/2, (height - holeheight)/2, 0, lc)\n    p7 = gmsh.model.geo.addPoint(holewidth/2, (height + holeheight)/2, 0, lc)\n    p8 = gmsh.model.geo.addPoint(-holewidth/2, (height + holeheight)/2, 0, lc)\n\n    # Add the lines\n    l1 = gmsh.model.geo.addLine(p1, p2)\n    l2 = gmsh.model.geo.addLine(p2, p3)\n    l3 = gmsh.model.geo.addLine(p3, p4)\n    l4 = gmsh.model.geo.addLine(p4, p1)\n    l5 = gmsh.model.geo.addLine(p5, p6)\n    l6 = gmsh.model.geo.addLine(p6, p7)\n    l7 = gmsh.model.geo.addLine(p7, p8)\n    l8 = gmsh.model.geo.addLine(p8, p5)\n\n    # Create loops and the domain\n    outerLoop = gmsh.model.geo.addCurveLoop([l1, l2, l3, l4])\n    innerLoop = gmsh.model.geo.addCurveLoop([l5, l6, l7, l8])\n    domain = gmsh.model.geo.addPlaneSurface([outerLoop, innerLoop])\n\n    # Synchronize the model\n    gmsh.model.geo.synchronize()\n\n    # Create the physical domains\n    gmsh.model.addPhysicalGroup(1, [l1], -1, \"bottom\")\n    gmsh.model.addPhysicalGroup(1, [l2], -1, \"right\")\n    gmsh.model.addPhysicalGroup(1, [l3], -1, \"top\")\n    gmsh.model.addPhysicalGroup(1, [l4], -1, \"left\")\n    gmsh.model.addPhysicalGroup(1, [l5, l6, l7, l8], -1, \"Γ\")\n    gmsh.model.addPhysicalGroup(2, [domain], -1, \"Ω\")\n\n    # Set Periodic boundary condition\n    transform = [1, 0, 0, period, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\n    gmsh.model.mesh.setPeriodic(1, [l2], [l4], transform)\n\n    # Generate a 2D mesh\n    gmsh.model.mesh.generate(2)\n\n    grid = mktempdir() do dir\n        path = joinpath(dir, \"hole.msh\")\n        gmsh.write(path)\n        togrid(path)\n    end\n\n    # Finalize the Gmsh library\n    gmsh.finalize()\n\n    return grid\nend;\nnothing #hide","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"We still use homogeneous medium in the waveguide.","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"function n(x)\n    return 1.0\nend;\nnothing #hide","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"We need to implement a new function to impose the boundary condition.","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"function my_bdcs(dh::DofHandler; period=1.0)\n    cst = ConstraintHandler(dh)\n\n    # Periodic boundary condition on the left and right\n    # side of the periodic cell\n    pfacets = collect_periodic_facets(dh.grid, \"right\", \"left\", x -> x + Ferrite.Vec{2}((period, 0.0)))\n    pbc = PeriodicDirichlet(:u, pfacets)\n    add!(cst, pbc)\n\n    # Set Dirichlet boundary condition on the inner boundary\n    dfacets = getfacetset(dh.grid, \"Γ\")\n    dbc = Dirichlet(:u, dfacets, x -> 0)\n    add!(cst, dbc)\n\n    close!(cst)\n\n    return cst\nend","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"Set parameters","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"p = 1.0;\nh = 1.0;\nhw = 0.5;\nhh = 0.5;\nN = 150;\nnothing #hide","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"Set up the grid","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"grid = my_grid(lc=0.05, period=p, height=h, holewidth=hw, holeheight=hh)","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"basic steps need by Ferrite.jl","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"# Define the interpolation\nip = Lagrange{RefTriangle, 1}()\n# Set up the FE values: CellValues\ncv = setup_fevs(ip)\n# Set up the DofHandler\ndh = setup_dofs(grid, ip)\n\n# Set the boundary conditions\ncst = my_bdcs(dh, period=p)\n\n# Allocate the matrices\nA = allocate_matries(dh, cst)\nB = allocate_matries(dh, cst)\n\n# Discretize the Brillouin zone\nbz = collect(range(-π/p, 2π/p, N))\n\n# Calculate the dispersion diagram\nμ = calc_diagram(cv, dh, cst, A, B, n, bz, nevs=5)\n\n# Plot the dispersion diagram\nplot_diagram(bz, μ, period=p)","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"","category":"page"},{"location":"pa2/","page":"PA-Two","title":"PA-Two","text":"This page was generated using Literate.jl.","category":"page"},{"location":"dirichlet/#Homogeneous-case-with-Dirichelt-boundary-condition","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"","category":"section"},{"location":"dirichlet/#Problem","page":"Homogeneous case with Dirichelt boundary condition","title":"Problem","text":"","category":"section"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"We consider homogeneous case with Dirichlet boundary condition on the boundaries of the closed waveguide.","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"The function q(x_1 x_2) = 1 is a constant function.\nhomogeneous Dirichlet boundary condition on partial Omega.","category":"page"},{"location":"dirichlet/#Code","page":"Homogeneous case with Dirichelt boundary condition","title":"Code","text":"","category":"section"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"We load the packages we need.","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"using Ferrite\nusing ClosedWaveguideDispersion","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"Since we consider the homogeneous waveguide just like Tutorial, we also define the refractive index as a constant.","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"function n(x)\n    return 1.0\nend","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"Similarly, here are the parameters related to the periodic cell and the discrete Brillouin zone.","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"p = 1.0;\nh = 1.0;\nN = 100;\nnothing #hide","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"We need to implement a new function to impose the periodic boundary condition and the Dirichlet boundary condition.","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"function my_bdcs(dh::DofHandler; period=1.0)\n    cst = ConstraintHandler(dh)\n\n    # Periodic boundary condition on the left and right\n    # side of the periodic cell\n    pfacets = collect_periodic_facets(dh.grid, \"right\", \"left\", x -> x + Ferrite.Vec{2}((period, 0.0)))\n    pbc = PeriodicDirichlet(:u, pfacets)\n    add!(cst, pbc)\n\n    # Set Dirichlet boundary condition on the top and bottom boundaries of the periodic cell\n    dfacets = union(getfacetset(dh.grid, \"bottom\"), getfacetset(dh.grid, \"top\"))\n    dbc = Dirichlet(:u, dfacets, x -> 0)\n    add!(cst, dbc)\n\n    close!(cst)\n\n    return cst\nend","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"Set up the grid.","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"grid = setup_grid(lc=0.05, period=p, height=h)","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"Basic steps needed by Ferrite.jl","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"ip = Lagrange{RefTriangle, 1}()\ncv = setup_fevs(ip)\ndh = setup_dofs(grid, ip)\n\n# Set the boundary conditions\ncst = my_bdcs(dh, period=p)\n\n# Allocate the matrices\nA = allocate_matries(dh, cst)\nB = allocate_matries(dh, cst)\n\n# Discretize the Brillouin zone\nbz = collect(range(-π/p, π/p, N))\n\n# Calculate the dispersion diagram\nμ = calc_diagram(cv, dh, cst, A, B, n, bz, nevs=6)\n\n# Plot the dispersion diagram\nplot_diagram(bz, μ, period=p)","category":"page"},{"location":"dirichlet/#Plain-code","page":"Homogeneous case with Dirichelt boundary condition","title":"Plain code","text":"","category":"section"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"using Ferrite\nusing ClosedWaveguideDispersion\n\nfunction n(x)\n   return 1.0\nend\n\np = 1.0;\nh = 1.0;\nN = 100;\n\nfunction my_bdcs(dh::DofHandler; period=1.0)\n    cst = ConstraintHandler(dh)\n\n    # Periodic boundary condition on the left and right\n    # side of the periodic cell\n    pfacets = collect_periodic_facets(dh.grid, \"right\", \"left\", x -> x + Ferrite.Vec{2}((period, 0.0)))\n    pbc = PeriodicDirichlet(:u, pfacets)\n    add!(cst, pbc)\n\n    # Set Dirichlet boundary condition on the top and bottom boundaries of the periodic cell\n    dfacets = union(getfacetset(dh.grid, \"bottom\"), getfacetset(dh.grid, \"top\"))\n    dbc = Dirichlet(:u, dfacets, x -> 0)\n    add!(cst, dbc)\n\n    close!(cst)\n\n    return cst\nend\n\ngrid = setup_grid(lc=0.05, period=p, height=h)\nip = Lagrange{RefTriangle, 1}()\ncv = setup_fevs(ip)\ndh = setup_dofs(grid, ip)\ncst = my_bdcs(dh, period=p)\n\nA = allocate_matries(dh, cst)\nB = allocate_matries(dh, cst)\n\nbz = collect(range(-π/p, π/p, N))\nμ = calc_diagram(cv, dh, cst, A, B, n, bz, nevs=6)\n\nplot_diagram(bz, μ, period=p)","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"","category":"page"},{"location":"dirichlet/","page":"Homogeneous case with Dirichelt boundary condition","title":"Homogeneous case with Dirichelt boundary condition","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#ClosedWaveguideDispersion","page":"Home","title":"ClosedWaveguideDispersion","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ClosedWaveguideDispersion.","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you want to use ClosedWaveguideDispersion.jl, please press ] in the REPL to  enter the pkg> mode. Then enter","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add https://github.com/peakfind/ClosedWaveguideDispersion.jl.git","category":"page"},{"location":"#Structure-of-this-documentation","page":"Home","title":"Structure of this documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Tutorial presents a basic framework for computing dispersion diagrams in 2D periodic closed waveguides. \nExamples contains problems with different domains or boundary conditions. This part can help you to implement your own code for compuation of disperison diagrams.","category":"page"},{"location":"tutorial/#Tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"In this tutorial, we will present some basic knowledge of dispersion diagrams and use an example to show how ClosedWaveguideDispersion.jl works.","category":"page"},{"location":"tutorial/#Problem","page":"Tutorial","title":"Problem","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Let Omega = mathbbR times (0 1) subset mathbbR^2 be a closed waveguide with the boundary","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"partial Omega = x = (x_1 x_2) in mathbbR^2  x_2 = 0 text or  x_2 = 1","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Suppose Omega is filled by periodic medium with period p in x_1 direction. The medium can be characterized by the real-valued refactive index q(x_1 x_2) satisfying","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"q(x_1 + p x_2) = q(x_1 x_2) q geqslant c  0 forall (x_1 x_2) in Omega","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Moreover, we assume that q(x_1 x_2) in L^infty(Omega).","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The wave propagation in the periodic closed waveguide is modeled by the following boundary value problem","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"beginequation*\n    begincases\n        Delta u + k^2q(x_1 x_2)u = f text in  Omega \n        fracpartial upartial x_2 = 0 text on  partial Omega\n    endcases\nendequation*","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"where f is a function in L^2(Omega) with compact support, and k  0 is the real wavenumber. Here we take the Neumann boundary condition as an example. We can also use other boundary conditions as soon as they are consistent with the periodicity.","category":"page"},{"location":"tutorial/#Periodicity","page":"Tutorial","title":"Periodicity","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Let A in mathbbR^n times n be an invertible matrix whose columns a_1 ldots a_n  are linearly independent. A (Bravias) lattice Gamma in mathbbR^n is defined by","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"beginequation*\n    Gamma =  gamma in mathbbR^n  gamma = Az = sum_j = 1^n a_j z_j z in mathbbZ^n \nendequation*","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We introduce the fundamental cell W, so-called Wigner-Seitz cell, ","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"beginequation*\n    W =  gamma in mathbbR^n  gamma = Az z in mathbbZ^n -12  z_j  12 \nendequation*","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Let B in mathbbR^n times n denote 2pi(A^mathrmT)^-1 whose columns are  b_1 ldots b_n. Then we have the lattice generated by B,","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"beginequation*\n    K =  k in mathbbR^n  k = Bz = 2pi(A^mathrmT)^-1z = sum_j = 1^n b_j z_j z in mathbbZ^n \nendequation*","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"We call K the reciprocal lattice of Gamma. The Brillouin zone B is defined by","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"beginequation*\n    B =  k in mathbbR^n  k = Bz z in mathbbZ^n -12  z_j  12 \nendequation*","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Since we consider 2D closed waveguides which are periodic in x_1 direction. Then our  discussion above reduces to the scalar case. If our period is p, then the Wigner-Seitz  cell is (-p2 p2) and the Brillouin zone is (-pip pip).","category":"page"},{"location":"tutorial/#Floquet-Bloch-theory","page":"Tutorial","title":"Floquet-Bloch theory","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"For simplicity, we only present necessary notions for computation. For more theoretical details, we refer to [1] and [2]. The Floquet-Bloch transform is given by","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"(Tu)(x_1 x_2 alpha) = sum_n in mathbbZ u(x_1 + 2pi n x_2) e^-ialpha (x_1 + 2pi n)","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Actually, it is a partial Floquet-Bloch tranform which is only applied on x_1 variable. The parameter alpha is introduced by the Floquet-Bloch transform. And we always consider alpha in the Brillouin zone (-pip pip).","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Transfering the dependence on alpha from the function space to the PDE by using the (partial) Floquet-Bloch transform, we have the following boundary value problem","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"beginequation*\n    begincases\n        Delta v + 2ialpha partial_1v + (k^2q(x_1 x_2) - alpha^2) v = 0 text in  Omega_0 \n        fracpartial vpartial x_2 = 0 text on  partial Omega_0 \n        v text is periodic with respect to  x_1 phantomon\n    endcases\nendequation*","category":"page"},{"location":"tutorial/#Variational-formulation","page":"Tutorial","title":"Variational formulation","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"In this section, we present the variational formulation of the periodic boundary value problem introduced in the preceding section: Find v in H_per^1(Omega_0) satisfying","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"int_Omega_0 nabla v cdot nabla barphi - 2ialpha partial_1 v barphi - (k^2q(x_1 x_2) - alpha^2) v barphi dx = 0","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"After finite element discretization, we can obtain a generalized linear eigenvalue problem","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"mathbfA_alpha mathbfv = k^2 mathbfB mathbfv","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"where mathbfA_alpha comes from","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"int_Omega_0 nabla v cdot nabla barphi - 2ialpha partial_1 v barphi + alpha^2 v barphi dx ","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"and mathbfB comes from","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"int_Omega_0 q(x_1 x_2) v barphi dx","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"note: important steps in the computation\nWe use the Finite element method to discretize the variational formulation. All Finite element codes are implemented by Ferrite.jl\nAfter the Finite element discretization, we obtain a generalized linear eigenvalue problem parametered by alpha. We utilize Arpack.jl to solve the generalized linear eigenvalue problems with fixed alpha.","category":"page"},{"location":"zhang_case2/#Inhomogeneous-case","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"","category":"section"},{"location":"zhang_case2/#Problem","page":"Inhomogeneous case","title":"Problem","text":"","category":"section"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"This problem is the second example in [3] page .","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"q(x_1 x_2) = 9 in a disk with the center (0 05) and radius 03 and q(x_1 x_2) = 1 outside the disk.\nNeumann boundary condition on partial Omega.","category":"page"},{"location":"zhang_case2/#Code","page":"Inhomogeneous case","title":"Code","text":"","category":"section"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"We need the same packages as the homogeneous case","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"using Ferrite: Lagrange, RefTriangle\nusing ClosedWaveguideDispersion","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"Here we need to define a new refractive index.","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"function n(x)\n    r = sqrt(x[1]^2 + (x[2] - 0.5)^2)\n\n    if r <= 0.3\n        return 9.0\n    else\n        return 1.0\n    end\nend;\np = 1.0;\nh = 1.0;\nN = 100;\nnothing #hide","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"Then we generate the mesh and set up variables for finite element method.","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"# Set up the grid\ngrid = setup_grid(lc=0.05, period=p, height=h)\n\n# Define the interpolation\nip = Lagrange{RefTriangle, 1}()\n\n# Set up the FE values: CellValues\ncv = setup_fevs(ip)\n\n# Set up the DofHandler\ndh = setup_dofs(grid, ip)","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"For the boundary condition, we only need to use setup_bdcs to impose the periodic boundary condition in x_1 direction.","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"# Set the boundary conditions\ncst = setup_bdcs(dh, period=p)","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"We assemble the matrices for the generalized linear eigenvalue problems.","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"# Allocate the matrices\nA = allocate_matries(dh, cst)\nB = allocate_matries(dh, cst)","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"Then we solve the generalized eigenvalue problems at each alpha in bz,","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"# Discretize the Brillouin zone\nbz = collect(range(-π/p, π/p, N))\n\n# Calculate the dispersion diagram\nμ = calc_diagram(cv, dh, cst, A, B, n, bz, nevs=7)","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"Finally, we can get our dispersion diagram.","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"# Plot the dispersion diagram\nplot_diagram(bz, μ, period=p)","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"","category":"page"},{"location":"zhang_case2/","page":"Inhomogeneous case","title":"Inhomogeneous case","text":"This page was generated using Literate.jl.","category":"page"}]
}
